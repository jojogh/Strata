# FpmlTradeParser configuration

# Additional files may be added to the classpath with the same name
# All files will be loaded and built into a chain
# The resulting configuration is a combination of the files in the chain
#
# The various files in the chain are combined using a simple algorithm defined in the '[chain]' section.
# Firstly, the 'priority' value is used to sort the files, higher numbers have higher priority
# All entries in the highest priority file are used
# Note that priorities 0 to 99 inclusive are reserved by OpenGamma
#
# Once data from the highest priority file is included, the 'chainNextFile' property is examined
# If 'chainNextFile' is 'true', then the next file in the chain is considered
# The 'chainRemoveSections' property can be used to ignore specific sections from the files lower in the chain
#
# The chain process continues until the 'chainNextFile' is 'false', or all files have been combined
[chain]
priority = 0
chainNextFile = false


# The providers are the classes that define the enum
# The key is of the form 'provider.full.class.name'
# The value is either
#  'constants', the public static final constants from the class
#  'lookup', the class implements NamedLookup with a no-args constructor
#  'instance', the class has a static field named INSTANCE that is of type NamedLookup
[providers]
com.opengamma.strata.finance.impl.loader.BulletPaymentFpmlTradeParser = constants
com.opengamma.strata.finance.impl.loader.FraFpmlTradeParser = constants
com.opengamma.strata.finance.impl.loader.FxSingleLegFpmlTradeParser = constants
com.opengamma.strata.finance.impl.loader.FxSwapFpmlTradeParser = constants
com.opengamma.strata.finance.impl.loader.SwapFpmlTradeParser = constants
com.opengamma.strata.finance.impl.loader.TermDepositFpmlTradeParser = constants

# The set of alternate names
# The key is the alternate name
# The value is the standard name (loaded by a provider)
[alternates]
